{"ast":null,"code":"import { createstore } from 'react';\nimport { configureStore, createSlice, createStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0\n};\n\n// const counterReduser = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//         }\n//     }\n//     return state;\n// }\n// const store = createstore( counterReduser)\n//or \"optional cose createing store\"\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createstore","configureStore","createSlice","createStore","initialState","counter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","store","reducer","counterActions","actions"],"sources":["C:/redux_pfile/redux_practices/redux_usingToolkits/src/store/index.js"],"sourcesContent":["import { createstore } from 'react';\r\nimport { configureStore, createSlice, createStore } from \"@reduxjs/toolkit\";\r\nconst initialState = { counter: 0 };\r\n\r\n// const counterReduser = (state = initialState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//         }\r\n//     }\r\n//     return state;\r\n// }\r\n// const store = createstore( counterReduser)\r\n//or \"optional cose createing store\"\r\n\r\nconst counterSlice = createSlice(\r\n    {\r\n        name: 'counter',\r\n        initialState,\r\n        reducers: {\r\n            increment(state) {\r\n                state.counter ++;\r\n            },\r\n            decrement(state) {\r\n                state.counter --;\r\n            },\r\n            increase(state,action) {\r\n                state.counter= state.counter +action.payload;\r\n            },\r\n        }\r\n    }\r\n)\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\nexport  const counterActions = counterSlice.actions \r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3E,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAC5B;EACIK,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACL,OAAO,EAAG;IACpB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACL,OAAO,EAAG;IACpB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAE;MACnBH,KAAK,CAACL,OAAO,GAAEK,KAAK,CAACL,OAAO,GAAEQ,MAAM,CAACC,OAAO;IAChD;EACJ;AACJ,CACJ,CAAC;AAED,MAAMC,KAAK,GAAGd,cAAc,CAAC;EACzBe,OAAO,EAAEV,YAAY,CAACU;AAC1B,CAAC,CAAC;AAEF,OAAQ,MAAMC,cAAc,GAAGX,YAAY,CAACY,OAAO;AAEnD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}