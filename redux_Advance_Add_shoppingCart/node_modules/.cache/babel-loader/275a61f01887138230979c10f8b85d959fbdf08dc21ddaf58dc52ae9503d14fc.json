{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst cartinitialstat = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: cartinitialstat,\n  redusers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.filter(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.totalQuantity++;\n        existingItem.totalPrice = existingItem.totalQuantity * existingItem.price;\n      } else {\n        newItem.totalQuantity = 1;\n        newItem.totalPrice = newItem.totalQuantity * newItem.price;\n        state.items.push(newItem);\n        state.totalQuantity++;\n      }\n    },\n    removeItemTocart(state, actions) {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","require","cartinitialstat","items","totalQuantity","cartSlice","name","initialState","redusers","addItemToCart","state","action","newItem","payload","existingItem","filter","item","id","totalPrice","price","push","removeItemTocart","actions","cartActions"],"sources":["C:/redux_pfile/redux_practices/redux_Advance_Add_shoppingCart/src/store/cart_slice.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst cartinitialstat = { items: [], totalQuantity: 0 }\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: cartinitialstat,\r\n    redusers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n\r\n            const existingItem = state.items.filter((item) => item.id === newItem.id)\r\n            if (existingItem) {\r\n                existingItem.totalQuantity++;\r\n                existingItem.totalPrice = existingItem.totalQuantity * existingItem.price;\r\n\r\n            }else{\r\n                newItem.totalQuantity= 1;\r\n                newItem.totalPrice = newItem.totalQuantity * newItem.price;\r\n                state.items.push(newItem)\r\n                state.totalQuantity++;\r\n            }\r\n\r\n\r\n        },\r\n        removeItemTocart(state, actions) {\r\n\r\n        }\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;      "],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,eAAe,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE;AAAE,CAAC;AAEvD,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,eAAe;EAC7BM,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAE9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACzE,IAAIH,YAAY,EAAE;QACdA,YAAY,CAACV,aAAa,EAAE;QAC5BU,YAAY,CAACI,UAAU,GAAGJ,YAAY,CAACV,aAAa,GAAGU,YAAY,CAACK,KAAK;MAE7E,CAAC,MAAI;QACDP,OAAO,CAACR,aAAa,GAAE,CAAC;QACxBQ,OAAO,CAACM,UAAU,GAAGN,OAAO,CAACR,aAAa,GAAGQ,OAAO,CAACO,KAAK;QAC1DT,KAAK,CAACP,KAAK,CAACiB,IAAI,CAACR,OAAO,CAAC;QACzBF,KAAK,CAACN,aAAa,EAAE;MACzB;IAGJ,CAAC;IACDiB,gBAAgBA,CAACX,KAAK,EAAEY,OAAO,EAAE,CAEjC;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAMC,WAAW,GAAGlB,SAAS,CAACiB,OAAO;AAC5C,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}